<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F0F0F0" Offset="0.0"/>
		<GradientStop Color="#E5E5E5" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
	<LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ECF4FC" Offset="0.0"/>
		<GradientStop Color="#DCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
	<SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
	<SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
	<Style x:Key="TabItemStyle_Invisible" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="true" Visibility="Collapsed">
						<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0" Visibility="Collapsed">
							<Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
						</Border>
						<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Visibility="Collapsed"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,0,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,0,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="0,-2,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,-2,0"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
		<Setter Property="Padding" Value="2"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="449"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,447" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Visibility="Collapsed"/>
						<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
	<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
	<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
	<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
	<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
	<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
	<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
	<SolidColorBrush x:Key="MainControlGray" Color="#FF505050"/>
	<SolidColorBrush x:Key="MainControlSelected" Color="#FF405970"/>
	<Style x:Key="MainLBItem" TargetType="{x:Type ListBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="border" Padding="0">
						<Border.Effect>
							<DropShadowEffect BlurRadius="4" Opacity="0" ShadowDepth="0"/>
						</Border.Effect>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MainControlSelected}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Bd">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MainControlSelected}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="border">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Bd">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MainControlSelected}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates"/>
							<VisualStateGroup x:Name="ValidationStates"/>
						</VisualStateManager.VisualStateGroups>
						<VisualStateManager.CustomVisualStateManager>
							<ei:ExtendedVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" BorderBrush="{DynamicResource MainControlGray}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="0.9"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
	<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource MainControlGray}" Padding="1" SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Foreground="{DynamicResource MainTabControlText}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>